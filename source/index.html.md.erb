---
title: International Bridge Blue API

language_tabs:
  - shell

toc_footers:
  - <a href='https://blue.myib.com/register'>Create an International Bridge Blue account</a>

includes:
  - payment_methods.md.erb
  - payment_transactions.md.erb
  - pickups.md.erb
  - statuses
  - errors

search: true
---

# Introduction

The <%= config[:product_name] %> API allows developers to integrate shipping labels and fullfillment within their e-commerce businesses and online marketplaces. The API offers price comparison, label printing, manifest generation, transactions details and tracking features. The guideline below will help get you started. For additional help, please email us at [<%= config[:support_email] %>](mailto:<%= config[:support_email] %>).

To create an account, please visit [<%= config[:production_website_url] %>](<%= config[:production_registration_url] %>) and sign up for a free account. You'll use the same email address and password to submit API requests (see below). Before you can start printing live labels, you'll need to (1) verify your email address, (2) verify your SMS, (3) fill in your full mailing address and (4) add a valid credit card to our system.

## Carriers and Services

Currently the International Bridge Blue platform supports USPS, GSS (presorted and discounted USPS), FedEx and UPS services. We are in the process of adding more carriers and services.

## eVS vs ePostage

International Bridge is certified for both USPS eVS and USPS ePostage. By default, accounts are set up with the ePostage configuration. If you'd like to switch your account to the eVS configuration, please email us at [<%= config[:support_email] %>](mailto:<%= config[:support_email] %>).

## Discounts

For high volume shippers, please contact us for possible domestic and international rate discounts. If you are part of an organization that has USPS negotiated rates and/or if you'd like to manage organization users (for pricing and billing), some additional steps are required. Please email us at [<%= config[:support_email] %>](mailto:<%= config[:support_email] %>).

## Billing

We support several payment methods. By default, accounts are set up for "meter" payments. You can add funds to your meter using different payment methods (credit card, Paypal or by mailing us a check). As you print shipping labels via the Blue website or the Blue API, the cost of the label is deducted from your account/meter balance. You can turn on the meter auto-refill flag to ensure printing labels without any downtime. For high volume shippers who are also trusted and vetted partners, we offer invoice billing.

## Manifesting

Manifesting can be performed explicitly (for one or all unmanifested mailpieces) via the manifesting API or by using the Blue website. International Bridge manifests "on behalf of the user" at the end of the day at 11:55PM PST based on the mailpiece's postmark date. The manifest response contains a collection of several SCAN (Shipment Confirmation Acceptance Notice) forms, each with its EFN (Electronic File Number); the number of the SCAN forms depends on the induction point, destination entry and other aggregation factors.

## Refunds

Unmanifested mailpieces can be refunded immediately. For the already manifested mailpieces (whether explicitly or automatically end-of-day), refunds are approved after approximately 2 weeks, pending that the labels were never used (i.e. tracking events don't exist).

## Sandbox

The Sandbox environment will help you get started, test your requests and the API responses before you generate Production labels. To create an account on the Sandbox environment, please visit [<%= config[:sandbox_website_url] %>](<%= config[:sandbox_registration_url] %>). A full mailing address and credit card information is not required like it is in Production. You cannot induct mailpieces into the mailstream using labels generated in the Sandbox environment. There are no additional charges associated with requests in the Sandbox environment. When you are ready to generate live labels, switch the API Sandbox URL with the API Production URL. The requests (including headers) do not change.

## API Endpoints

<aside class="notice">
Sandbox: <%= config[:sandbox_api_url] %>
</aside>

<aside class="notice">
Production: <%= config[:production_api_url] %>
</aside>

## RESTful API

The API is a RESTful API that supports JSON requests and responses. HATEOAS is not supported. This documentation provides code samples and libraries for different platforms to help you get started.

Requests must include "Content-Type: application/json" in the headers. Successful responses return HTTP status code 200 and 201. Depending on the request, responses return a JSON body or not. Unsuccessful responses return HTTP status codes 4XX and 5XX with additional error details (code and message). Click [here](#errors) for details on the API errors.

## Versioning

The API version is specified in the endpoint URL. The current API version is v1.

## Authentication

All API calls must be authenticated. API uses basic HTTP authentication to authenticate user requests. The username and the password are the email and the password associated with the user's account created on the <%= config[:product_name] %> website (<%= config[:production_website_url] %>).

## Request-Response Structure and Multiple Carriers

The structure of the API has been designed to support multiple carriers, and to easily allow developers to switch between carriers while keeping common sections unchanged. For example, the address and dimensions sections are universal and their structure wouldn't change between carrier A and carrier B. Carrier specific data is passed in carrier specific attributes. For example, a USPS shipping label which includes signature confirmation is included in the usps attribute ("usps" : { ..., "services" : ["SignatureConfirmation"] }).

Responses follow the same structure. Shipping metadata which is carrier specific is returned in carrier specific attributes.

## Pagination

The RESTful routes that return array of entities are paginated. The `page_number` and `page_size` parameters can be set in the URL query parameters or in the request headers. The response headers will contain the following pagination fields: `page-count`, `page-size`, `total-count-of-items`, `current-page`.

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/labels?request_id=123&page_number=2&page_size=10"
```

> The above command returns headers structured like this:

```json
Current-Page →2
Page-Count →167
Page-Size →10
Total-Count-Of-Items →1667
```

# Labels

## Create a Shipping Label

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"request_id\": \"AQX90000000234\",
  \"from_address\": {
    \"first_name\": \"John\",
    \"last_name\": \"Michaels\",
    \"line1\": \"247 High St\",
    \"city\": \"Palo Alto\",
    \"state_province\": \"CA\",
    \"postal_code\": \"94301\",
    \"country_code\": \"US\"
  },
  \"to_address\": {
    \"first_name\": \"Ted\",
    \"last_name\": \"Resnick\",
    \"line1\": \"350 5th Ave\",
    \"line2\": \"Suite 7510\",
    \"city\": \"New York\",
    \"state_province\": \"NY\",
    \"postal_code\": \"10118\",
    \"country_code\": \"US\"
  },
  \"weight\": 2,
  \"weight_unit\": \"lb\",
  \"image_format\": \"png\",
  \"usps\": {
    \"mail_class\": \"Priority\",
    \"shape\": \"Parcel\",
    \"image_size\": \"4x6\",
    \"services\": [
      \"SignatureConfirmation\"
    ]
  }
}" "<%= config[:production_api_url] %>/labels"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "AQX90000000234",
  "status" : "created",
  "postmark_date":"2018-03-22T23:37:05-07:00",
  "postage_amount" : 10.44,
  "fees_amount" : 2.35,
  "total_amount" : 12.79,
  "usps": {
    "tracking_numbers" : ["9210890188666700000058"],
    "pricing" : "Commercial Plus",
    "fees" : [{ "name" : "Signature Confirmation", "fee" : 2.35 }],
    "zone": 1
  },
  "base64_labels" : ["iVBORw0KGgoAAAA..."]
}
```

### HTTP Request

`POST <%= config[:production_api_url] %>/labels`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
request_id | (null/empty) | Request ID. Used by API developers to match requests and responses. Echoed back in the request_id tag of the response.
metadata | (null/empty) | Metadata details like references and rubberstamps. See details [here](#metadata-query-parameters)
from_address | (required) | From shipping address. See details [here](#address-query-parameters).
to_address | (required) | To shipping address. See details [here](#address-query-parameters).
weight | (required) | Weight.
weight_unit | (required) | Weight unit. One of oz, lb, g, kg.
dimensions | (null/empty) | Dimensions. See details [here](#dimensions-query-parameters).
dimensions_unit | (required if dimensions provided) | Dimensions unit. One of in, ft, mm, cm, m.
value | (null/empty) | Total package value. Required for most international (customs form) requests.
non_delivery_option | Return | Non-delivery option. One of Abandon, Return.
postmark_date | (UTC current date time) | UTC postmark date.
image_format | (required) | Image format. One of png, pdf, svg, zpl, gif.
image_resolution | 300 | Image resolution in DPI. One of 150, 203, 300, 600.
customs_form | (null/empty) | Customs form for military (APO/FPO/DPO) and international shipping. See details [here](#customs_form-query-parameters).
usps | (null/empty) | USPS carrier data. See details [here](#usps-label-query-parameters).
gss | (null/empty) | GSS program data. See details [here](#gss-label-query-parameters).
ups | (null/empty) | UPS carrier data. See details [here](#ups-label-query-parameters).
fedex | (null/empty) | FedEx carrier data. See details [here](#fedex-label-query-parameters).

### metadata Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
rubberstamp1 | (null/empty) | User defined rubberstamp. Prints at different locations depending on the label type and size.
rubberstamp2 | (null/empty) | User defined rubberstamp. Prints at different locations depending on the label type and size.
rubberstamp3 | (null/empty) | User defined rubberstamp. Prints at different locations depending on the label type and size.
reference1 | (null/empty) | User defined reference. Becomes searchable field.
reference2 | (null/empty) | User defined reference. Becomes searchable field.
reference3 | (null/empty) | User defined reference. Becomes searchable field.

### address Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
company_name | (conditional) | Company name. Required when first name and last name are not provided.
first_name | (conditional) | First name. Required when company name is not provided.
middle_name | (null/empty) | Middle name.
last_name | (conditional) | Last name. Required when company name is not provided.
phone_number | (null/empty) | Phone number.
email | (null/empty) | Email.
sms | (null/empty) | Sms phone number.
line1 | (required) | Address line 1.
line2 | (null/empty) | Address line 2.
line3 | (null/empty) | Address line 3.
city | (required) | City.
state_province | (conditional) | State/province. Required for USPS carrier.
postal_code | (conditional) | Postal code. Zip code for USPS carrier. Required for USPS carrier.
country_code | (required) | Iso country code.

### dimensions Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
width | (required) | Width.
length | (required) | Length.
height | (required) | Height.

### usps Label Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
mail_class | (required) | Mail class. One of Priority, Express, FirstClass, ParcelSelect, ParcelSelectLightweight, LibraryMail, MediaMail, BoundPrintedMatter, FirstClassInternational, PriorityInternational, PriorityExpressInternational.
shape | (required) | One of Parcel, Flat, FlatRateEnvelope, LegalFlatRateEnvelope, PaddedFlatRateEnvelope, SmallFlatRateBox, MediumFlatRateBox, LargeFlatRateBox, RegionalRateBoxA, RegionalRateBoxB. <strong>The following shapes are valid only for PMOD:</strong> Sack, FullTrayBox, HalfTrayBox, FlatTubBox, ExtendedManagedMail (aka EMMTray)
services | (null/empty) | Services. One of OpenAndDistribute, Fragile, Perishable, LiveAnimal, HazMat, CrematedRemains, Certified, Restricted, Adult, COD, SignatureConfirmation, Insurance, Registered, ReturnReceipt, ReturnReceiptElectronic, ReturnReceiptMerchandise, HoldForPickup.
image_size | 4x6 | Image size. One of 4x6, 6x4.
po_zip_code | (see Description) | Induction zip code. If not provided, it defaults to the mailpiece from address postal code.
presort_level | (conditional) | Presort level. Required for Library Mail, Media Mail, Parcel Select Destination Entry and Parcel Select Lightweight. One of None, 5-Digit, 3-Digit, SCF, NDC, MixedNDC, DDU, Basic.
entry_facility | (conditional) | Entry facility. Required for Parcel Select Destination Entry and Parcel Select Lightweight. One of None, DNDC, DSCF, DDU.
softpack | (conditional) | Boolean softpack indicator. Applies ONLY to Priority Mail cubic.
open_and_distribute | (conditional) | Required when services includes OpenAndDistribute. See details [here](#usps-open_and_distribute-query-parameters).

### USPS open_and_distribute Query Parameters

The Open and Distribute (PMOD) service is a special feature of Priority Mail. The first address line of a PMOD label must adhere to specifications found in Postal Bulletin 22507. Use the API's company_name field of the To-Address to specify this line.

For example, an SCF-destined PMOD container address format will start with "SCF" followed by the destination city, state, followed by the facility's NASS (National Air and Surface System) code. An example would be "SCF Royal Palm FL 330PM", where the "330PM" is the NASS code.  A similar construct is used for NDC, ASF, and ADC PMOD labels.

For DDU-destined PMOD labels, the first line will be of the form "DDU" followed by city and state.

You must provide the full address of each facility, although for SCF, NDC, ASF and ADC labels only the first line will actually be printed on the label. DDU labels will have the complete address printed -- including street address and city, state, zip.

For more information, consult [<%= config[:fast_usps] %>](<%= config[:fast_usps] %>)

Parameter | Default | Description
--------- | ------- | -----------
enclosed_mail_class | (required) | Enclosed mail class. One of MixedMail, PriorityMail, ParcelSelectMail, ParcelSelectLightweightMail, LibraryMail, MediaMail, BoundPrintedMatterMail, RetailGround, MarketingMail, ParcelReturnServiceMail, MatterForTheBlindMail, Periodicals.
enclosed_shape | (required) | Enclosed mailpiece shape. One of Parcels, Letters, Flats.
facility_type | (required) | Destination processing facility type. One of SCF, DDU, ADC, ASF, NDC.



### gss Label Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
mail_class | (required) | Mail class. One of ePacket, PriorityInternational, PriorityExpressInternational, FirstClassInternational, InternationalPriorityAirmail, InternationalSurfaceAirLift.
location_id | (required) | The location ID as provided by the GSS program.

### ups Label Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
service | (required) | Service. One of 2Day, 2DayAM, ExpressSaver, Ground, GroundHomeDelivery, FirstOvernight, InternationalEconomy, InternationalFirst, InternationalPriority, PriorityOvernight, StandardOvernight.
packaging_type | (required) | Packaging Type. One of Box, Envelope, Pak, Tube, Custom.
dropoff_type | (required) | Dropoff Type. One of RegularPickup, RequestCourier, DropBox, BusinessServiceCenter, Station.
cod_special_service | (null/empty) | COD special service. See details [here](#ups-cod_package_option-query-parameters).
signature_special_service | (null/empty) | Signature special service. See details [here](#ups-delcon_package_option-query-parameters).

### fedex Label Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
service | (required) | Service. One of NextDayAir, 2ndDayAir, Ground, 3DaySelect, NextDayAirSaver, NextDayAirEarly, 2ndDayAirAM, WorldwideExpress, WorldwideExpedited, Standard, WorldwideExpressPlus, Saver.
packaging_type | (required) | Packaging Type. One of Letter, Package, Tube, Pak, SmallExpressBox, MediumExpressBox, LargeExpressBox.
cod_package_option | (null/empty) | COD package options. See details [here](#fedex-cod_special_service-query-parameters).
delcon_package_option | (null/empty) | Delivery Confirmation package options. See details [here](#fedex-signature_special_service-query-parameters).

### customs_form Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
contents_type | (required) | Contents type. One of "Documents", "Gift", "Merchandise", "ReturnedGoods", "Sample", "HumanitarianDonation", "DangerousGoods", "Other".
restriction_type | (null/empty) | Restriction type. One of "Quarantine", "SanitaryInspection", "PhytosanitaryInspection", "Other", "None".
restriction_comments | (null/empty) | Restriction comments.
senders_customs_reference | (null/empty) | Sender's customs reference.
importers_customs_reference | (null/empty) | Importer's customs reference.
importers_customs_reference_type | (null/empty) | Importer's customs reference type. One of "TaxCode", "VATNumber", "ImporterCode".
license_number | (null/empty) | License number.
certificate_number | (null/empty) | Certificate number.
invoice_number | (null/empty) | Invoice number.
customs_signator | (required) | First and last name of person responsible for shipment.
importers_contact | (null/empty) | Importer's contact phone number.
pfc_itn | (null/empty) | Proof of filing citation ITN number.
insured_number | (null/empty) | Insured reference number.
customs_items | (required) | Customs items collection. See details [here](#customs_item-query-parameters).

### customs_item Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
description | (required) | Description.
quantity | (required) | Quantity.
weight | (required) | Weight.
weight_unit | (required) | Weight unit. One of oz, lb, g, kg.
value | (required) | Value.
hs_tariff_number | (null/empty) | HTS code.
origin_country_code | US | Origin iso country code.

### UPS cod_package_option Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
type | (required) | Type. One of Cash, MoneyOrder, Check.
value | (required) | Value.

### UPS delcon_package_option Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
type | (required) | Type. One of Regular, SignatureRequired, AdultSignatureRequired.

### FedEx cod_special_service Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
value | (required) | Value.
type | (required) | Type. One of Any, Cash, CompanyCheck, GuaranteedFunds, PersonalCheck.

### FedEx signature_special_service Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
type | (required) | Type. One of Adult, Direct, Indirect, NoSignatureRequired, ServiceDefault.

## Get (Reprint) a Shipping Label

<aside class="notice">
  Not available for UPS.
</aside>

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/labels/9210890188666700000058"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "AQX90000000234",
  "status" : "created",
  "postmark_date":"2018-03-22T23:37:05-07:00",
  "postage_amount" : 10.44,
  "fees_amount" : 2.35,
  "total_amount" : 12.79,
  "usps": {
    "tracking_numbers" : ["9210890188666700000058"],
    "pricing" : "Commercial Plus",
    "fees" : [{ "name" : "Signature Confirmation", "fee" : 2.35 }],
    "zone": 1
  },
  "base64_labels" : ["iVBORw0KGgoAAAA..."]
}
```

### HTTP Request

`GET <%= config[:production_api_url] %>/labels/[tracking_number]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
tracking_number | (required) | Tracking number.

## Delete (Void) a Shipping Label

```shell
curl -u user@email.com:password -X DELETE --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/labels/9210890188666700000058"
```

> The above command does not return any JSON.

### HTTP Request

`DELETE <%= config[:production_api_url] %>/labels/[tracking_number]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
tracking_number | (required) | Tracking number.

## Get Shipping Labels

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/labels?start_date=2018-03-21T00:00:00-07:00&end_date=2018-03-23T00:00:00-07:00"
```

> The above command returns JSON structured like this:

```json
[
  {
    "request_id" : "AQX90000000234",
    "status" : "created",
    "postmark_date":"2018-03-22T23:37:05-07:00",
    "postage_amount" : 10.44,
    "fees_amount" : 2.35,
    "total_amount" : 12.79,
    "usps": {
      "tracking_numbers" : ["9210890188666700000058"],
      "pricing" : "Commercial Plus",
      "fees" : [{ "name" : "Signature Confirmation", "fee" : 2.35 }],
      "zone": 1
    }
  },
  {
    "request_id": null,
    "status" : "voided",
    "postmark_date":"2018-03-22T23:37:05-07:00",
    "postage_amount": 5.6,
    "fees_amount": 0,
    "total_amount": 5.6,
    "usps": {
      "tracking_numbers": ["9205590188666700000406"],
      "pricing": "Commercial Plus",
      "fees": [{ "name": "USPS Tracking", "fee": 0 }],
      "zone": 2
    }
  }
]
```

### HTTP Request

`GET <%= config[:production_api_url] %>/labels?start_date=[start_date]&end_date=[end_date]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
start_date | (conditional) | Start date. UTC format. Mutually exclusive with request_id and status.
end_date | (conditional) | End date. UTC format. Mutually exclusive with request_id and status.
request_id | (conditional) | Request ID (used when creating the label). Mutually exclusive with date range and status.
status | (conditional) | Label status. Mutually exclusive with date range and request_id.
page_size | 25 | Page size.
page_number | 1 | Page number.

# Price

## Calculate Shipping Price

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"request_id\": \"PRIC920021-3AC\",
  \"from_address\": {
    \"first_name\": \"John\",
    \"last_name\": \"Michaels\",
    \"line1\": \"247 High St\",
    \"city\": \"Palo Alto\",
    \"state_province\": \"CA\",
    \"postal_code\": \"94301\",
    \"country_code\": \"US\"
  },
  \"to_address\": {
    \"first_name\": \"Ted\",
    \"last_name\": \"Resnick\",
    \"line1\": \"350 5th Ave\",
    \"line2\": \"Suite 7510\",
    \"city\": \"New York\",
    \"state_province\": \"NY\",
    \"postal_code\": \"10118\",
    \"country_code\": \"US\"
  },
  \"weight\": 2,
  \"weight_unit\": \"lb\",
  \"usps\": {
    \"mail_class\": \"Priority\",
    \"shape\": \"Parcel\",
    \"services\": [
      \"SignatureConfirmation\"
    ]
  }
}" "<%= config[:production_api_url] %>/price"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "PRIC920021-3AC",
  "postage_amount" : 10.44,
  "fees_amount" : 2.35,
  "total_amount" : 12.79,
  "usps": {
    "pricing" : "Commercial Plus",
    "fees" : [{ "name" : "Signature Confirmation", "fee" : 2.35 }]
  }
}
```

### HTTP Request

`POST <%= config[:production_api_url] %>/price`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
request_id | (null/empty) | Request ID. Used by API developers to match requests and responses. Echoed back in the request_id tag of the response.
from_address | (required) | From shipping address. See details [here](#address-query-parameters).
to_address | (required) | To shipping address. See details [here](#address-query-parameters).
weight | (required) | Weight.
weight_unit | (required) | Weight unit. One of oz, lb, g, kg.
dimensions | (null/empty) | Dimensions. See details [here](#dimensions-query-parameters).
dimensions_unit | (required if dimensions provided) | Dimensions unit. One of in, ft, mm, cm, m.
non_delivery_option | Return | Non delivery option. One of Abandon, Return.
postmark_date | (UTC current date time) | UTC postmark date.
customs_form | (null/empty) | Customs form for military (APO/FPO/DPO) and international shipping. See details [here](#customs_form-query-parameters).
usps | (null/empty) | USPS carrier data. See details [here](#usps-price-query-parameters).
gss | (null/empty) | GSS program data. See details [here](#gss-price-query-parameters).
ups | (null/empty) | UPS carrier data. See details [here](#ups-price-query-parameters).

### USPS Price Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
mail_class | (required) | Mail class. One of Priority, Express, FirstClass, ParcelSelect, ParcelSelectLightweight, LibraryMail, MediaMail, BoundPrintedMatter, FirstClassInternational, PriorityInternational, PriorityExpressInternational.
shape | (required) | One of Parcel, Flat, FlatRateEnvelope, LegalFlatRateEnvelope, PaddedFlatRateEnvelope, SmallFlatRateBox, MediumFlatRateBox, LargeFlatRateBox, RegionalRateBoxA, RegionalRateBoxB. Envelope, PaddedFlatRateEnvelope, SmallFlatRateBox, MediumFlatRateBox, LargeFlatRateBox, RegionalRateBoxA, RegionalRateBoxB. <strong>The following shapes are valid only for PMOD:</strong> Sack, FullTrayBox, HalfTrayBox, FlatTubBox, ExtendedManagedMail (aka EMMTray)
pricing | (null/empty) | One of Retail, CommercialBase, CommercialPlus, Custom. Defaults to the least expensive.
services | (null/empty) | Services. One of OpenAndDistribute, Fragile, Perishable, LiveAnimal, HazMat, CrematedRemains, Certified, Restricted, Adult, COD, SignatureConfirmation, Insurance, Registered, ReturnReceipt, ReturnReceiptElectronic, ReturnReceiptMerchandise, HoldForPickup.
po_zip_code | (see Description) | Induction zip code. If not provided, it defaults to the mailpiece from address postal code.
presort_level | (conditional) | Presort level. Required for Library Mail, Media Mail, Parcel Select Destination Entry and Parcel Select Lightweight. One of None, 5-Digit, 3-Digit, SCF, NDC, MixedNDC, DDU, Basic.
entry_facility | (conditional) | Entry facility. Required for Parcel Select Destination Entry and Parcel Select Lightweight. One of None, DNDC, DSCF, DDU.
softpack | (conditional) | Boolean softpack indicator. Applies to cubic.

### GSS Price Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
mail_class | (required) | Mail class. One of ePacket, PriorityInternational, PriorityExpressInternational, FirstClassInternational, InternationalPriorityAirmail, InternationalSurfaceAirLift.
location_id | (required) | The location ID as provided by the GSS program.

### UPS Price Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
service | (required) | Service. One of NextDayAir, 2ndDayAir, Ground, 3DaySelect, NextDayAirSaver, NextDayAirEarly, 2ndDayAirAM, WorldwideExpress, WorldwideExpedited, ExpressStandard, WorldwideExpressPlus, WorldwideSaver.
packaging_type | (required) | Packaging Type. One of Letter, Package, Tube, Pak, SmallExpressBox, MediumExpressBox, LargeExpressBox.
cod_package_option | (null/empty) | COD package options. See details [here](#ups-cod_package_option-query-parameters).
delcon_package_option | (null/empty) | Delivery Confirmation package options. See details [here](#ups-delcon_package_option-query-parameters).

# Manifests

<aside class="notice">
  Not available for UPS.
</aside>

## Create a Manifest

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"request_id\": \"MANX000000000C1\",
  \"image_format\": \"png\",
  \"image_resolution\" : 300,
  \"usps\": { }
}" "<%= config[:production_api_url] %>/manifests"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "MANX000000000C1",
  "usps" : [
    {
      "manifest_number" : "9275090188665400000024",
      "priority_count" : 1,
      "express_count" : 0,
      "pmi_count" : 0,
      "emi_count" : 0,
      "gxg_count" : 0,
      "other_count" : 0,
      "base64_manifest" : "iVBORw0KGgoAAA..."
    },
  ]
}
```

### HTTP Request

`POST <%= config[:production_api_url] %>/manifests`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
request_id | (null/empty) | Request ID. Used by API developers to match requests and responses. Echoed back in the request_id tag of the response.
image_format | (required) | Image format. One of png, pdf, svg, zpl.
image_resolution | 300 | Image resolution in DPI. One of 150, 203, 300, 600.
usps | (null/empty) | USPS carrier data. See details [here](#usps-manifest-query-parameters).

### USPS Manifest Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
induction_address | (null/empty) | Induction address. Defaults to the user's account address. See details [here](#usps-contact-address-query-parameters).
tracking_numbers | (null/empty) | Tracking numbers collection to be included in this manifest. If omitted, all tracking numbers not included in the previous manifest are returned.

### USPS Contact Address Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
company_name | (conditional) | Company name. Required when first name and last name are not provided.
first_name | (conditional) | First name. Required when company name is not provided.
middle_name | (null/empty) | Middle name.
last_name | (conditional) | Last name. Required when company name is not provided.
phone_number | (null/empty) | Phone number.
email | (null/empty) | Email.
sms | (null/empty) | Sms phone number.
line1 | (required) | Address line 1.
line2 | (null/empty) | Address line 2.
line3 | (null/empty) | Address line 3.
city | (required) | City.
state_province | (conditional) | State/province. Required for USPS carrier.
postal_code | (conditional) | Postal code. Zip code for USPS carrier. Required for USPS carrier.
country_code | (required) | Iso country code.

## Get (Reprint) a Manifest

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/manifests/9210890188666700000058"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "MANX000000000C1",
  "usps" :
  {
    "manifest_number" : "9275090188665400000024",
    "priority_count" : 1,
    "express_count" : 0,
    "pmi_count" : 0,
    "emi_count" : 0,
    "gxg_count" : 0,
    "other_count" : 0,
    "base64_manifest" : "iVBORw0KGgoAAA..."
  }
}
```

### HTTP Request

`GET <%= config[:production_api_url] %>/manifests/[tracking_number]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
tracking_number | (required) | Tracking number.

## Get Manifests

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/manifests?start_date=2018-03-21T00:00:00-07:00&end_date=2018-03-21T00:00:00-07:00"
```

> The above command returns JSON structured like this:

```json
[
  {
    "usps": [
      {
        "manifest_number": "9275090188665400000017",
        "priority_count": 42,
        "express_count": 1,
        "pmi_count": 0,
        "emi_count": 0,
        "gxg_count": 0,
        "other_count": 0
      }
    ]
  },
  {
    "usps": [
      {
        "manifest_number": "9275090188665400000024",
        "priority_count": 1,
        "express_count": 0,
        "pmi_count": 0,
        "emi_count": 0,
        "gxg_count": 0,
        "other_count": 0
      }
    ]
  }
]
```

### HTTP Request

`GET <%= config[:production_api_url] %>/manifests?start_date=[start_date]&end_date=[end_date]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
start_date | (conditional) | Start date. UTC format. Mutually exclusive with request_id and status.
end_date	(conditional) | End date. UTC format. Mutually exclusive with request_id and status.
request_id | (conditional) | Request ID (used when creating the label). Mutually exclusive with date range and status.
status | (conditional) | Label status. Mutually exclusive with date range and request_id.
page_size | 25 | Page size.
page_number | 1 | Page number.

# USPS Services

## Get USPS Services

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"request_id\": \"SVCXXC009282111\",
  \"mail_class\": \"Priority\",
  \"services\" : [\"COD\"]
}" "<%= config[:production_api_url] %>/usps_services"
```

> The above command returns JSON structured like this:

```json
{
  "request_id" : "SVCXXC009282111",
  "services" : ["COD", "ReturnReceipt", "ReturnReceiptElectronic", "Restricted", "SignatureConfirmation"]
}
```

### HTTP Request

`POST <%= config[:production_api_url] %>/usps_services`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
request_id | (null/empty) | Request ID. Used by API developers to match requests and responses. Echoed back in the request_id tag of the response.
mail_class | (required) | Mail class. One of Priority, Express, FirstClass, ParcelSelect, ParcelSelectLightweight, LibraryMail, MediaMail, BoundPrintedMatter, FirstClassInternational, PriorityInternational, PriorityExpressInternational.
services | (null/empty) | Services. One of OpenAndDistribute, Fragile, Perishable, LiveAnimal, HazMat, CrematedRemains, Certified, Restricted, Adult, COD, SignatureConfirmation, Insurance, Registered, ReturnReceipt, ReturnReceiptElectronic, ReturnReceiptMerchandise, HoldForPickup.
value | 0 | Package insured value.
waive_signature | true | Waive signature flag. Used for Express Mail.
country_code | (null/empty) | Iso country code. Required for international mail classes.

# Address

Currently, only US addresses can be validated (country_code must be set to 'US').

## Validation

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"line1\" : \"247 High St\",
  \"city\" : \"Palo X\",
  \"state_province\" : \"CA\",
  \"postal_code\" : \"94301\",
  \"country_code\": \"US\"
}" "<%= config[:production_api_url] %>/address/validate"
```

> The above command returns JSON structured like this:

```json
{
  "line1" : "247 HIGH ST",
  "line2" : "",
  "line3" : "",
  "last_line" : "PALO ALTO CA 94301-1041",
  "city" : "PALO ALTO",
  "state_province" : "CA",
  "zip5" : "94301",
  "zip4" : "1041",
  "dpbc" : "476",
  "record_type" : "S",
  "rdi" : "B",
  "dpv" : "AABB",
  "dpv_comment" : " ",
  "carrier_route" : "C001",
  "address_exists" : " "
}
```

### HTTP Request

`POST <%= config[:production_api_url] %>/address/validate`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
company_name | (null/empty) | Company name.
line1 | (required) | Address line 1.
line2 | (null/empty) | Address line 2.
line3 | (null/empty) | Address line 3.
city | (null/empty) | City.
state_province | (null/empty) | State/province.
postal_code | (null/empty) | Postal code.
country_code | (required) | Iso country code.

## Resolve Multiple

```shell
curl -u user@email.com:password -X POST --header "Content-Type: application/json" --header "Accept: application/json" -d "{
  \"line1\" : \"525 University Ave\",
  \"city\" : \"Palo Alto\",
  \"state_province\" : \"CA\",
  \"postal_code\" : \"94301\"
}" "<%= config[:production_api_url] %>/address/resolve_multiple"
```

> The above command returns JSON structured like this:

```json
[
  {
    "primary_high" : "0000000525",
    "primary_low" : "0000000525",
    "secondary_high" : "A70",
    "secondary_low" : "A70",
    "secondary_name" : "",
    "street_name" : "UNIVERSITY",
    "pre_direction" : "",
    "post_direction" : "",
    "suffix" : "AVE",
    "zip_code" : "94301",
    "addon_low" : "1924",
    "addon_high" : "1924",
    "unit" : "STE",
    "record_type" : "H",
    "state_abbreviation" : null,
    "county_number" : "085",
    "carrier_route" : "C011"
  },
  {
    "primary_high" : "0000000525",
    "primary_low" : "0000000525",
    "secondary_high" : "A100",
    "secondary_low" : "A100",
    "secondary_name" : "",
    "street_name" : "UNIVERSITY",
    "pre_direction" : "",
    "post_direction" : "",
    "suffix" : "AVE",
    "zip_code" : "94301",
    "addon_low" : "1925",
    "addon_high" : "1925",
    "unit" : "STE",
    "record_type" : "H",
    "state_abbreviation" : null,
    "county_number" : "085",
    "carrier_route" : "C011"
  },
  {
    "primary_high" : "0000000525",
    "primary_low" : "0000000525",
    ...
  },
  ...
]
```

### HTTP Request

`POST <%= config[:production_api_url] %>/address/resolve_multiple`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
line1 | (required) | Address line 1.
line2 | (null/empty) | Address line 2.
line3 | (null/empty) | Address line 3.
city | (null/empty) | City.
state_province | (null/empty) | State/province.
postal_code | (null/empty) | Postal code.

## Get City

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/address/city?zip5=94301"
```

> The above command returns JSON structured like this:

```json
{
  "city" : "Palo Alto",
  "state" : "CA"
}
```

### HTTP Request

`GET <%= config[:production_api_url] %>/address/city?zip5=[zip5]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
zip5 | (required) | Zip 5.

## Get Streets

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/address/streets?zip5=94301"
```

> The above command returns JSON structured like this:

```json
[
  "ADDISON AVE",
  "ALMA ST",
  "ANTON CT",
  "ASHBY DR",
  "BOYCE AVE",
  "BRYANT CT",
  "BRYANT ST",
  "BYRON ST",
  ...
]
```

### HTTP Request

`GET <%= config[:production_api_url] %>/address/streets?zip5=[zip5]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
zip5 | (required) | Zip 5.

## Get Possible Addresses

```shell
curl -u user@email.com:password -X GET --header "Content-Type: application/json" --header "Accept: application/json" "<%= config[:production_api_url] %>/address/possible_addresses?zip5=94301&primary=247&street_name=H"
```

> The above command returns JSON structured like this:

```json
[
  "247 HAMILTON AVE",
  "247 HAMILTON CT",
  "247 HIGH ST"
]
```

### HTTP Request

`GET <%= config[:production_api_url] %>/address/possible_addresses?zip5=[zip5]&primary=[primary number]&street_name=[street name]`

### Query Parameters

Parameter | Default | Description
--------- | ------- | -----------
zip5 | (required) | Zip 5.
primary number | (required) | Primary street number.
street name | (null/empty) | Street name. Could be null, incomplete (e.g. "H") or full (e.g. "High")
